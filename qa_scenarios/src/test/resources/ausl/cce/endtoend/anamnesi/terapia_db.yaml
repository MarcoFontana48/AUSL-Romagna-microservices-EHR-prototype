# mongodb-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: terapia-mongo-data
  namespace: monitoring-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# mongodb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: terapia-mongo-db
  namespace: monitoring-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: terapia-mongo-db
  template:
    metadata:
      labels:
        app: terapia-mongo-db
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "password"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 5
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: terapia-mongo-data
---
# mongodb-terapia.yaml
apiVersion: v1
kind: Service
metadata:
  name: terapia-mongo-db
  namespace: monitoring-app
spec:
  selector:
    app: terapia-mongo-db
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
# mongodb-terapia-hpa.yaml (horizontal pod autoscaler for mongodb-terapia)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: terapia-hpa
  namespace: monitoring-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: terapia
  minReplicas: 1  # minimum number of replicas to scale down to
  maxReplicas: 20  # maximum number of replicas to scale up to
  metrics:
    # scale based on CPU utilization, others can be added as needed, like 'memory'
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 66 # 2/3 of requested % CPU
#  behavior:
#    # define custom scaling behavior (optional)
#    scaleUp:
#      stabilizationWindowSeconds: 0    # scale up immediately
#    scaleDown:
#      stabilizationWindowSeconds: 120   # wait 2 minutes before scaling down after resource usage drops below threshold
---