services:

#  anamnesi-pregressa:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: anamnesi-pregressa
#    environment:
#      - CONFIG_SERVER_HOST_NAME=anamnesi-pregressa-mongo-db
#      - CONFIG_SERVER_PORT=27017
#      - CONFIG_SERVER_DB_NAME=anamnesi-pregressa-mongo-db
#      - CONFIG_SERVER_DB_USERNAME=root
#      - CONFIG_SERVER_DB_PASSWORD=password
#    networks:
#      - app-network
#    depends_on:
#      anamnesi-pregressa-mongo-db:
#        condition: anamnesi-pregressa_started

  anamnesi-pregressa-mongo-db:
    image: mongo:latest
    container_name: anamnesi-pregressa-mongo-db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - anamnesi-pregressa-mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
      anamnesi-pregressa-mongo-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  anamnesi-pregressa-mongo-data: