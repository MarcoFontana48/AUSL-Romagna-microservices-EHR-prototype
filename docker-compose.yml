services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  service:
    build:
      context: .
      dockerfile: service/Dockerfile
    container_name: service
#    environment:
#      - LOG_LEVEL=debug
#      - LOG_ADD_SOURCE=true
    networks:
      - app-network
#    healthcheck:
#      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
#      interval: 5s
#      timeout: 3s
#      retries: 3
#      start_period: 10s
    depends_on:
      prometheus:
        condition: service_healthy

  api-gateway:
    build:
      context: .
      dockerfile: api_gateway/Dockerfile
    container_name: api_gateway
#    environment:
#      - LOG_LEVEL=debug
#      - LOG_ADD_SOURCE=true
    ports:
      - "8080:8080"
    networks:
      - app-network
#    depends_on:
#      service:
#        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  prometheus_data: